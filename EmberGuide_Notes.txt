Core Concepts:
  Router and Route Handler
  URL defines mode of operation:
    CRUD on item x?
  URL is set by:
    Initial page load
    Manual edit
    Click link or button
    Other event in app

  Router maps URL to a Route Handler

  Route Handler...
    renders a template
    or, loads model that's then available to the template

  Template organize HTML layout with Handlebars template 
    {{}} holds:
      properties
      helpers 
      components 

  Model represents persistent state 
    typically saved on web server, 
    but also anywhere else, like browser's local storage 

  Component controls how user interface behave 
    Component = handlebars template + source file in JS

  Hooks are methods called automatically in app
    Ex.
      Component Lifecycle Hooks: run code at component initial render, re-render or destroyed  
        willRender() hooks get called before each time a component renders
      Route Hooks: model() load model on route 

Directory Structure 
  upon using new command to generate a project, following files and directories are generated 
  Folders:
    app: stores models, components, routes, template and styles 
    config: stores "environment.js" which config app setting
    node_modules: import from npm
    public: assets like images and fonts
    vendor: front-end dependencies like (JS / CSS) that are not managed by NPM
    tests: automated test 

  Files:
    package.json: list of current npm dependencies for app, installed in node_modules directory 
    testem.js: ember test runner testem is configured here 
    ember-cli-build.js: describes how Ember CLI build app

Route and Template 
  When creating a new page that can be visited via URL, generate a route
  Ex. An about route
    ember generate route about

  Ember route is built with 3 parts:
  1. An entry with Ember router that maps b/t route name and specific URL
  2. A route handler file - setup for when the route is loaded
  3. A route template displays content of page      

The Model Hook
  route handler loads model with data for the page
  function model() acts as a hook, it is called when user navigate to the page

Installing Addons
  Browse addons by https://emberobserver.com/

Vendor directory holds contents compiled into application like CSS files
CSS file in vendor directory is then put into vendor.css
vendor.css is referenced by app/index.html


